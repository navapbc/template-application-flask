openapi: "3.0.0"

info:
  title: "test spec used by test_validators"
  version: "1.0"

paths:
  /user:
    get:
      summary: Test API
      operationId: tests.api.route.test_validators.get_user
      responses:
        200:
          description: greeting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
                  - properties:
                      data:
                        $ref: "#/components/schemas/User"
    post:
      summary: Test API
      operationId: tests.api.route.test_validators.post_user
      responses:
        200:
          description: greeting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
                  - properties:
                      data:
                        $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/User"

components:
  schemas:
    SuccessfulResponse:
      type: object
      properties:
        status_code:
          type: integer
        message:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        data:
          oneOf:
            - type: array
            - type: object        
        warnings:
          type: array
          items:
            $ref: "#/components/schemas/Issue"        
      required: ["status_code"]
      additionalProperties: false
    Meta:
      type: object
      properties:
        resource:
          type: string
        method:
          type: string
        query:
          type: object
        paging:
          type: object
          properties:
            offset:
              type: integer
            limit:
              type: integer
            count:
              type: integer
            total:
              type: integer
      required: ["resource", "method"]
      additionalProperties: false
    Issue:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        rule:
          oneOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
          - type: object
        field:
          type: string
      required: ["type", "message"]
      additionalProperties: false
    User:
      type: object
      properties:
        first_name:
          type: string
          example: "Jane"
        last_name:
          type: string
          example: "Doe"
        interests:
          type: array
          maxItems: 2
          uniqueItems: true
          example: ["sports", "activity"]
      required: ["first_name", "last_name"]
