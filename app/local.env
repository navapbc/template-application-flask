# Local environment variables
# Used by docker-compose and it can be loaded
# by calling load_local_env_vars() from app/src/util/local.py

ENVIRONMENT=local
PORT=8080

# Python path needs to be specified
# for pytest to find the implementation code
PYTHONPATH=/app/

# PY_RUN_APPROACH=python OR docker
# Set this in your environment
# to modify how the Makefile runs
# commands that can run in or out
# of the Docker container - defaults to outside

FLASK_APP=src.app:create_app

############################
# Logging
############################

# Can be "human-readable" OR "json"
LOG_FORMAT=human-readable

# Set log level. Valid values are DEBUG, INFO, WARNING, CRITICAL
# LOG_LEVEL=INFO

# Enable/disable audit logging. Valid values are TRUE, FALSE
LOG_ENABLE_AUDIT=FALSE

# Change the message length for the human readable formatter
# LOG_HUMAN_READABLE_FORMATTER__MESSAGE_WIDTH=50

############################
# Authentication
############################
# The auth token used by the local endpoints
API_AUTH_TOKEN=LOCAL_AUTH_12345678

############################
# DB Environment Variables
############################

# Set DB_HOST to localhost if accessing a non-dockerized database
DB_HOST=main-db
DB_NAME=postgres
DB_USER=postgres
DB_PASSWORD=secret123
DB_SSL_MODE=allow

# When an error occurs with a SQL query,
# whether or not to hide the parameters which
# could contain sensitive information.
HIDE_SQL_PARAMETER_LOGS=TRUE

############################
# AWS Defaults
############################
# For these secret access keys, don't
# add them to this file to avoid mistakenly
# committing them. Set these in your shell
# by doing `export AWS_ACCESS_KEY_ID=whatever`
AWS_ACCESS_KEY_ID=DO_NOT_SET_HERE
AWS_SECRET_ACCESS_KEY=DO_NOT_SET_HERE
# These next two are commented out as we
# don't have configuration for individuals
# to use these at the moment and boto3
# tries to use them first before the keys above.
#AWS_SECURITY_TOKEN=DO_NOT_SET_HERE
#AWS_SESSION_TOKEN=DO_NOT_SET_HERE

AWS_DEFAULT_REGION=us-east-1
