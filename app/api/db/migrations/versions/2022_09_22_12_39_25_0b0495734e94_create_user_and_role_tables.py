"""Create user and role tables first migration

Revision ID: 0b0495734e94
Revises:
Create Date: 2022-09-22 12:39:25.511001

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0b0495734e94"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("first_name", sa.Text(), nullable=False),
        sa.Column("middle_name", sa.Text(), nullable=True),
        sa.Column("last_name", sa.Text(), nullable=False),
        sa.Column("phone_number", sa.Text(), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("user_id", name=op.f("user_pkey")),
    )
    op.create_table(
        "user_role",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("role_description", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.user_id"], name=op.f("user_role_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint("user_id", "role_description", name=op.f("user_role_pkey")),
    )
    op.create_index(
        op.f("user_role_role_description_idx"), "user_role", ["role_description"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("user_role_role_description_idx"), table_name="user_role")
    op.drop_table("user_role")
    op.drop_table("user")
    # ### end Alembic commands ###
